;; for melpa package manager

;(require 'package)
;(add-to-list 'package-archives
;             '("melpa-stable" . "http://stable.melpa.org/packages/") t )
;(package-initialize)

;;== el-get ==
;; el-get configuration
;;(add-to-list 'load-path "~/.emacs.d/el-get/el-get")
;;(unless (require 'el-get nil 'noerror)
;;  (with-current-buffer
;;	(url-retrieve-synchronously
;;	  "https://raw.githubusercontent.com/dimitri/el-get/master/el-get-install.el")
;;	(goto-char (point-max))
;;	(eval-print-last-sexp)))
;;
;;(add-to-list 'el-get-recipe-path "~/.emacs.d/el-get-user/recipes")
;;(el-get 'sync)

(add-to-list 'load-path "~/.emacs.d/el-get/el-get")
(setq el-get-emacs "/opt/local/bin/emacs")
(unless (require 'el-get nil 'noerror)
  (require 'package)
  (add-to-list 'package-archives
               '("melpa" . "http://melpa.org/packages/"))
  (package-refresh-contents)
  (package-initialize)
  (package-install 'el-get)
  (require 'el-get))

(add-to-list 'el-get-recipe-path "~/.emacs.d/el-get-user/recipes")

;; el-get 自动安装插件
(setq my-packages
	(append '(slime lua-mode projectile yasnippet auto-complete evil expand-region ido-better-flex ido-vertical-mode smex)))
(el-get 'sync my-packages)

;;== evil ==
(add-to-list 'load-path "~/.emacs.d/el-get/evil")
(require 'evil)
;(evil-mode 1)

;;== slime ==
;; Set your lisp system and, optionally, some contribs
(require 'slime-autoloads)
(setq slime-contribs '(slime-fancy))
(setq slime-lisp-implementations
     `((sbcl ("/opt/local/bin/sbcl"))
       (abcl ("/opt/local/bin/abcl"))
       (clisp ("/opt/local/bin/clisp"))))
(setq inferior-lisp-program "/opt/local/bin/sbcl")
(slime-setup  '(slime-repl slime-asdf slime-fancy slime-banner))

;;== ido mode ==
(require 'ido)
(ido-mode 1)
(ido-everywhere 1)
;(ido-better-flex/enable)
(require 'ido-vertical-mode)
(ido-vertical-mode 1)
(setq ido-vertical-show-count 5)

;; ido completion in org-mode and magit
(setq org-completion-use-ido 1)
(setq magit-completing-read-function 'magit-ido-completing-read)

(add-to-list 'load-path "~/.emacs.d/el-get/ido-ubiquitous")
(require 'ido-ubiquitous)
(ido-ubiquitous-mode 1)

;;== lua-mode ==
(autoload 'lua-mode "lua-mode" "Lua editing mode." t)
(add-to-list 'auto-mode-alist '("\\.lua$" . lua-mode))
(add-to-list 'auto-mode-alist '("Slua.*\\.txt$" . lua-mode))
(add-to-list 'interpreter-mode-alist '("lua" . lua-mode))

;;== auto-complete ==
(require 'auto-complete)
(require 'auto-complete-config)
(ac-config-default)

;;== yasnipet ==
(require 'yasnippet)
(yas-global-mode 1)

;;== smex ==
;; better command prompt
(require 'smex) ; Not needed if you use package.el
(smex-initialize) ; Can be omitted. This might cause a (minimal) delay
; * Bind some keys:
(global-set-key (kbd "M-x") 'smex)
(global-set-key (kbd "M-X") 'smex-major-mode-commands)
;; This is your old M-x.
(global-set-key (kbd "C-c C-c M-x") 'execute-extended-command)



;;== expand-region ==
(add-to-list 'load-path "~/.emacs.d/el-get/expand-region")
(require 'expand-region)
;(global-set-key (kbd "C-=") 'er/expand-region)

;; common settings
(setq scroll-step 1)
(setq scroll-conservatively 10000)
(setq auto-window-vscroll nil)
(global-linum-mode 1)

;; backup file setting
(setq backup-directory-alist `((".*" . , "~/.emacs.d/backup")))
(setq backup-by-copying t)
(setq delete-old-versions t
	  kept-new-versions 6
	  kept-old-versions 2
	  version-control t)
;; enable syntax highlight
(setq global-font-lock-mode 1)
;; set tab stop
(setq-default indent-tabs-mode nil)
(setq-default tab-width 4)
(setq indent-line-function 'insert-tab)
(setq linum-format
      (lambda
        (line)
        (propertize
         (format
          (let
              ((w (length (number-to-string (count-lines (point-min) (point-max)))))) (concat "%" (number-to-string w) "d ")) line) 'face 'linum)))
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   ["#2e3436" "#a40000" "#4e9a06" "#c4a000" "#204a87" "#5c3566" "#729fcf" "#eeeeec"])
 '(custom-enabled-themes (quote (tsdh-dark)))
 '(ido-enable-flex-matching t)
 '(ido-mode (quote both) nil (ido))
 '(menu-bar-mode nil)
 '(tool-bar-mode nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

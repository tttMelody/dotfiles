"=====================general
set number 
set wh=999 
set ruler 
set showcmd 
set showtabline=0
"set scrolljump=-5
set confirm 
set novisualbell 
if has('mouse') 
	set mouse=a
	set ttymouse=xterm2
endif
" 设置vim剪切板和系统剪切板共享
set clipboard+=unnamed
set so=5 
set listchars=tab:▸\ ,eol:¬  "关于特殊字符请搜索 Unicode character table
set nolist 
set linebreak 
set wrap 
"set showbreak=↘ "u21e2 u2198
set enc=utf-8
"set cursorline
set fileencodings=ucs-bom,utf-8,cp936,GB18030,big5,GBK,GB2312,chinese,latin1,default 
"set fileencoding=utf-8 
"set fileencodings=ucs-bom,GBK,utf-8,cp936,gb18030,big5,latin1 
set lazyredraw "wait to redraw
set ttyfast
set formatoptions=tcrqn1
set undolevels=1000
set history=1000
set cindent 
set autoindent 
set smartindent 
set copyindent
set backspace=indent,eol,start 

set noexpandtab 
set tabstop=4 
set softtabstop=4 
set shiftwidth=4 
set smarttab "insert tabs on the start of a line according to shiftwidth,not tabstop

set title "change the terminal title
set nocompatible " Disable vi-compatibility 
set pastetoggle=<F2>
set tags+=./tags
" Turn on wildmenu -- command-line completion
set wildmenu
set wildmode=longest,full
set wildignore=*.bak,*.o,*.obj,*.e,*~,*.pyc,*.svn

set whichwrap+=<,>,h,l,b,s,[,]
"====diff mode setting=====
if &diff
	" some setting
else
	"set wh=999 
endif
"set diffopt=filler,horizontal "vertical diff by default
"c-w H -- change to vertical diff mode
"c-w J -- change to horizontal diff mode
"=====================textFormat
set foldmethod=marker
"set nofoldenable "dont fold by default
"set foldmarker={,}
set foldopen=search,block,hor,mark,percent,quickfix,tag,undo
set foldmethod=marker "fold based on indent
set foldnestmax=10 "deepest fold is 10 levels
set foldlevel=1 "this is just what i use
map <leader>f1 :set fdm=manual<cr>
map <leader>f2 :set fdm=indent<cr>
map <leader>f3 :set fdm=marker<cr>
"set virtualedit=all 
"=====================autoComplete
"set dict+=/usr/share/dict/words 
set completeopt = ".,w,b,u,t,i,]" 
"set omnifunc=syntaxcomplete#Complete 
"=====================user defined color
"hi User1 term=inverse,bold cterm=inverse,bold ctermfg=red
"====================statusline
set laststatus=2 " Always show the statusline 
set statusline=%f\ %-m%r
set statusline+=\ %{tagbar#currenttag('%s','')}
set statusline+=%=
set statusline+=\ %{fugitive#statusline()}
set statusline+=%4l/%-4L\ %%%p
set statusline+=\ %y
set statusline+=\ [%{(&fenc==\"\"?&enc:&fenc)}]
set statusline+=\ [%{&fileformat}]
"=====================search
set incsearch 
set hlsearch 
set ignorecase smartcase "infercase
set completeopt=longest,menu 
filetype off 
"=====================for debug
"set verbosefile=/data/log/vimscript.log
"=====================vundle
runtime! ftplugin/man.vim
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'
Plugin 'Align'
Plugin 'auto_mkdir'
Plugin 'a.vim'
Plugin 'ivalkeen/vim-ctrlp-tjump'
Plugin 'dingmingxin/molokai'
"Plugin 'gorodinskiy/vim-coloresque'
" needed for fetching schemes online.
"Plugin 'Rykka/colorv.vim'
"Plugin 'mattn/webapi-vim' 
"Plugin 'wesleyche/SrcExpl'
"Plugin 'wesleyche/Trinity'
"Plugin 'chazy/cscope_maps'
Plugin 'kien/ctrlp.vim'
Plugin 'tacahiroy/ctrlp-funky'
"Plugin 'mattn/ctrlp-mark'
Plugin 'bash-support.vim'
Plugin 'mattn/calendar-vim'
Plugin 'csv.vim'
Plugin 'vim-scripts/c.vim'
Plugin 'mattn/emmet-vim' 
"Plugin 'Gundo'
Plugin 'EasyMotion'
Plugin 'vim-indent-object'
Plugin 'The-NERD-Commenter'
Plugin 'The-NERD-tree'
Plugin 'repeat.vim'
Plugin 'snipMate'
"Plugin 'bling/vim-airline'
"影响速度，弃用airline
Plugin 'AutoComplPop'
Plugin 'tpope/vim-markdown'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-abolish'
"Plugin 'tpope/vim-dispatch'
Plugin 'tpope/vim-surround'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'majutsushi/tagbar'
Plugin 'vim-scripts/applescript.vim'
"Plugin 'vim-scripts/LargeFile'
Plugin 'vim-scripts/vimwiki'
Plugin 'vim-scripts/matchit.zip'
Plugin 'airblade/vim-gitgutter'

call vundle#end()
filetype plugin indent on 
syntax on 
set ffs=unix,dos,mac 
set backspace=indent,eol,start 

"dingmingxin-base
func! SetMolokaiTheme()
	set background=dark
	let g:molokai_original = 1
	let g:rehash256 = 1
    colo molokai 
endfunc

if (has("gui_running")) 
	"hi cursorline guibg=NONE gui=underline
    set guifont=Menlo\ Regular:h18 
    call SetMolokaiTheme()
else 
	set t_Co=256
	call SetMolokaiTheme()
	"hi cursorline ctermbg=NONE cterm=underline
	hi NonText cterm=NONE ctermfg=NONE
endif 
"=====================autoCommand 
"获取文件名的后缀，防止对vim.otl zsh.otl crontab.otl 之类的文件类型误判
au BufReadPost * if expand("%:e")=='otl' |set filetype=otl |endif
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif  
"align plugin is installed 
augroup csvFile
	au!
	au FileType csv nnoremap <Leader><Leader>s <ESC>:%s/\ //g<CR> 
	au FileType csv nnoremap <Leader><Leader>t :noh<CR> :%Align ,<CR> 
augroup END
"au FileType yaml set tabstop=2 softtabstop=2 shiftwidth=2
au FileType lua call SetLuaTagsFile()
au FileType php call SetPhpTagsFile()
au FileType otl set tags+=/data/dwork/learn/tags 
"au FileType lua nested :TagbarOpen
"autocmd! BufWritePost .vimrc source %

func! SetLuaTagsFile()
	let path=expand('%:p')
	if matchstr(path,'gundam')!="" 
		set tags+=~/.vim/gundam-luatags
	endif
	if matchstr(path,'sanguo2')!=""
		set tags+=~/.vim/sanguo2-luatags
	endif
	return
	if matchstr(path,'sanguo')!=""
		set tags+=~/.vim/luatags
	endif
endfunc
fun! SetPhpTagsFile()
	let path=expand('%:p')
	if matchstr(path,'gundam')!=""
		set tags+=/data/work/gundam/apps/mingxin/tags
		set tags-=/data/work/sanguo/apps/mingxin/tags
	endif
	if matchstr(path,'sanguo')!=""
		set tags-=/data/work/gundam/apps/mingxin/tags
		set tags+=/data/work/sanguo/apps/mingxin/tags
	endif
endfunc
"=== browsing code setting, ex, cscope global .. 
"set cscopetag
"set cscopeprg=gtags-cscope
"set cscopequickfix=c-,d-,e-,f-,g0,i-,s-,t-

"================================================
"==              thirdPardPlugin               ==
"================================================
"=====================csv
let g:csv_nomap_cr = 1 "csv文件阻止回车折行
"=====================Align
let g:Align_xstrlen= 3  "align support multibyte
"=====================a_vim
"imap <Leader>is <ESC>:IHS<CR>:A<CR>
"nmap <Leader>is :IHS<CR>:A<CR>
"a.vim 和c.vim 同时安装的时候，打开c文件这两个映射会冲突，注掉a.vim中得即可
"=====================LargeFile
let g:LargeFile = 10 "consider file that larger than 10 MB a large file
"=====================NERD_commenter
let g:NERDRemoveExtraSpaces = 0
"=====================gundo 
let g:gundo_preview_bottom=1 
let g:gundo_preview_height=40 
let g:gundo_right=1 
nnoremap <F5> :GundoToggle<CR> 
"=====================easymotion
"let g:EasyMotion_leader_key = '<Leader><Leader>'
"=====================ctrlP 
let g:ctrlp_open_multiple_files = '5t' 
let g:ctrlp_arg_map = 0 
let g:ctrlp_max_height = 15 
let g:ctrlp_switch_buffer = 'Et'
let g:ctrlp_match_window = 'bottom,order:btt,min:1,max:15,results:15' 
let g:ctrlp_use_caching = 1 
let g:ctrlp_clear_cache_on_exit = 1 
let g:ctrlp_cache_dir = $HOME.'/.cache/ctrlp' 
let g:ctrlp_funky_sort_by_mru = 1
let g:ctrlp_open_new_file = 't'
let g:ctrlp_tabpage_position = 'ac'
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_show_hidden = 0 
let g:ctrlp_map = '\p' 
let g:ctrlp_cmd = 'CtrlP' 
let g:ctrlp_custom_ignore = { 
    \ 'dir': '\v[\/]\.(git|svn)$', 
    \ 'file': '\v\.(log|jpg|png|jpeg)$', 
    \} 
let g:ctrlp_mruf_max = 1000 
let g:ctrlp_mruf_exclude = '/tmp/.*\|/temp/.*\|/var/.*\|'
            \'/private/.*\|\.git.*\|'
            \'.*\.vim.*' 
let g:ctrlp_mruf_relative = 0 
let g:ctrlp_mruf_case_sensitive = 0 
let g:ctrlp_extensions = ['tag', 'dir' , 'funky', 'buffertag' ] 
let g:ctrlp_prompt_mappings = { 
            \ 'PrtBS()': ['<bs>', '<c-]>'], 
            \ 'PrtDelete()': ['<del>'], 
            \ 'PrtDeleteWord()': ['<c-w>'], 
            \ 'PrtClear()': ['<c-u>'], 
            \ 'PrtSelectMove("j")': ['<c-j>', '<down>'], 
            \ 'PrtSelectMove("k")': ['<c-k>', '<up>'], 
            \ 'PrtSelectMove("t")': ['<Home>', '<kHome>'], 
            \ 'PrtSelectMove("b")': ['<End>', '<kEnd>'], 
            \ 'PrtSelectMove("u")': ['<PageUp>', '<kPageUp>'],  
            \ 'PrtSelectMove("d")': ['<PageDown>', '<kPageDown>'], 
            \ 'PrtHistory(-1)': ['<c-n>'], 
            \ 'PrtHistory(1)': ['<c-p>'], 
            \ 'AcceptSelection("e")': ['<c-e>','<2-LeftMouse>'], 
            \ 'AcceptSelection("h")': ['<c-x>'], 
            \ 'AcceptSelection("t")': ['<c-t>', '<cr>'], 
            \ 'AcceptSelection("v")': ['<c-v>', '<RightMouse>'], 
            \ 'ToggleFocus()': ['<s-tab>'], 
            \ 'ToggleRegex()': ['<c-r>'], 
            \ 'ToggleByFname()': ['<c-d>'], 
            \ 'ToggleType(1)': ['<c-f>', '<c-up>'], 
            \ 'ToggleType(-1)': ['<c-b>', '<c-down>'], 
            \ 'PrtExpandDir()': ['<tab>'], 
            \ 'PrtInsert("c")': ['<MiddleMouse>', '<insert>'], 
            \ 'PrtInsert()': ['<c-\>'], 
            \ 'PrtCurStart()': ['<c-a>'], 
            \ 'PrtCurEnd()': ['<c-e>'],  
            \ 'PrtCurLeft()': ['<left>', '<c-^>'], 
            \ 'PrtCurRight()': ['<c-l>', '<right>'], 
            \ 'PrtClearCache()': ['<F5>'], 
            \ 'PrtDeleteEnt()': ['<F7>'], 
            \ 'CreateNewFile()': ['<c-y>'], 
            \ 'MarkToOpen()': ['<c-z>'], 
            \ 'OpenMulti()': ['<c-o>'], 
            \ 'PrtExit()': ['<esc>', '<c-c>', '<c-g>'], 
            \ }
nnoremap <Leader>f :CtrlPFunky<cr> 
nnoremap <Leader>[ :CtrlPBuffer<cr> 
nnoremap <Leader>u :CtrlPMRUFiles<cr> 
"=====================ctrlp_tjump 
nnoremap <Leader>] :CtrlPtjump<cr> 
vnoremap <Leader>] :CtrlPtjumpVisual<cr> 
"=====================vimwiki
let wiki_1 = {'path': '~/wiki/common/',
			\ 'path_html': '~/wiki/common_html',
			\ 'auto_export': 0 ,
			\ 'index': 'index',
			\ 'ext': '.wiki',
			\ 'template_path': '~/wiki/templates/',
			\ 'template_default': 'def_template',
			\ 'template_ext': '.html',
			\ 'css_name': '../css/main.css',
			\ 'nested_syntaxes': {'python': 'python', 'c++': 'cpp'},
			\ 'diary_rel_path': '../diary/',
			\ 'diary_index': 'diary'}
let g:vimwiki_list = [wiki_1]
 
" 对中文用户来说，我们并不怎么需要驼峰英文成为维基词条
let g:vimwiki_camel_case = 0
" 高亮 header
let g:vimwiki_hl_headers = 0
let g:vimwiki_hl_cb_checked = 1
let g:vimwiki_menu = ''
 
let g:vimwiki_CJK_length = 1
 
" 详见下文...
let g:vimwiki_valid_html_tags='b,i,s,u,sub,sup,kbd,del,br,hr,div,code,h1'
let g:vimwiki_diary_months = {
      \ 1: '一月', 2: '二月', 3: '三月',
      \ 4: '四月', 5: '五月', 6: '六月',
      \ 7: '七月', 8: '八月', 9: '九月',
      \ 10: '十月', 11: '十一月', 12: '十二月'
      \ }
"=====================tagbar
let g:tagbar_ctags_bin='/opt/local/bin/ctags'
let g:tagbar_left=0
let g:tagbar_width = 45
let g:tagbar_autoclose = 1
let g:tagbar_autofocus = 1
let g:tagbar_sort = 0 "0 sort by position; 1 sort by tag name
let g:tagbar_compact = 1
let g:tagbar_indent = 0
let g:tagbar_show_visibility = 1
let g:tagbar_show_linenumbers = 0
let g:tagbar_expand = 1
let g:tagbar_autoshowtag = 1
"let g:tagbar_previewwin_pos = "topleft"
"let g:tagbar_autopreview = 1
nnoremap tb :TagbarToggle<CR>
" NOTICE:
" kinds here must be single word, 
" c:classes is right
" cc:controller is wrong
let g:tagbar_type_php = {
	\ 'ctagstype' : 'php',
	\ 'kinds'     : [
		\ 'c:classes', 
		\ 'i:interfaces', 
		\ 'd:constant',
		\ 'f:functions', 
		\ 'j:jsfunctions'
	\ ],
\ }
let g:tagbar_type_lua = {
	\ 'ctagstype' : 'lua',
	\ 'kinds'     : [
		\ 'c:classes', 
		\ 'l:layout', 
		\ 'f:functions',
		\ 'e:events'
	\ ],
	\ 'sort' : 0,
	\ 'deffile' : '~/.config_ctags/ctags_lua.cnf'
\ }
let g:tagbar_type_javascript = {
	\ 'ctagstype' : 'js',
	\ 'kinds'     : [
		\ 'c:classes', 
		\ 'f:functions',
		\ 'n:ng-ctrl',
		\ 'q:ng-factory'
	\ ],
	\ 'sort' : 0,
	\ 'deffile' : '~/.config_ctags/ctags_js.cnf'
\ }
let g:tagbar_type_html = {
	\ 'ctagstype' : 'html',
	\ 'kinds'     : [
		\ 'f:functions',
		\ 'c:ng-ctrl',
		\ 'm:ng-factory',
		\ 't:ng-click'
	\ ],
	\ 'sort' : 0,
	\ 'deffile' : '~/.config_ctags/ctags_html.cnf'
\ }
"=====================mattn-emmet
let g:user_emmet_mode='inv'  
"=====================colorv.vim
let g:colorv_python_cmd = 'python'
"=====================dragvisual
"vmap  <expr>  <LEFT>   DVB_Drag('left')
"vmap  <expr>  <RIGHT>  DVB_Drag('right')
"vmap  <expr>  <DOWN>   DVB_Drag('down')
"vmap  <expr>  <UP>     DVB_Drag('up')
"vmap  <expr>  D        DVB_Duplicate()
"=====================maps
"nnoremap tt <C-t> 
"nnoremap gt <C-]>
"nnoremap <leader>gt <C-w><C-]><C-w>T "在一个新tab中打开
noremap <F10> :tabnext<CR>
noremap <F9> :tabprev<CR>
noremap tn :tabnew<CR>
noremap td :tabclose<CR>
"nnoremap <F3> :r! date \+\%F\ \%T<cr>
nnoremap <tab> %
vnoremap <tab> %
nnoremap <leader><space> :noh<cr>
nnoremap ; :
vnoremap ; :
nnoremap : ;
vnoremap : ;
nnoremap <F7> :tabmove -1<cr>
vnoremap <F7> :tabmove -1<cr>
nnoremap <F8> :tabmove +1<cr>
vnoremap <F8> :tabmove +1<cr>
nnoremap <UP> <Nop>
nnoremap <DOWN> <Nop>
nnoremap <LEFT> <Nop>
nnoremap <RIGHT> <Nop>
"==commind key shortcut,change vim behave like terminal
cnoremap <C-a>  <Home>
cnoremap <C-b>  <Left>
cnoremap <C-f>  <Right>
cnoremap <C-d>  <Delete>
cnoremap <M-b>  <S-Left>
cnoremap <M-f>  <S-Right>
cnoremap <M-d>  <S-right><Delete>
cnoremap <C-g>  <C-c>

" insert mode bash like movement
inoremap <C-a> <Home>
inoremap <C-b> <Left>
inoremap <C-e> <End>
inoremap <C-f> <Right>
inoremap <C-k> <Esc>d$i
iab xdate <c-r>=strftime("%Y-%m-%d %H:%M:%S")<cr>

"=====================TagHighlight
"if ! exists('g:TagHighlightSettings')
	"let g:TagHighlightSettings = {}
"endif
"let g:TagHighlightSettings['TagFileName'] = 'tags'
"let g:TagHighlightSettings['CtagsExecutable'] = '/usr/local/bin/ctags'
"let g:TagHighlightSettings['ProjectConfigFileName']='thlconfig.txt'
"let g:TagHighlightSettings['ProjectConfigDirModePriority']='Default'
"let g:TagHighlightSettings['DefaultDirModePriority']=['Explicit']
"let g:TagHighlightSettings['ProjectConfigDirModePriority'] = ''
"nnoremap ;s :so ~/Desktop/test_vim_script/test.vim<cr>
"=====================someTips
"\v[\u4e00-\u9fbf] 搜索中文字符
"=====================notice
"sparkup 插件安装之后，写php会导致C-n提示不好使。
"=====================special
" insert 模式下输入下面的编码
" 输入方式 Ctrl-V u2764
"❤ u2764
"u2b80 ~ u2b83
"⮀⮁⮂⮃
"=====================helps
"insert ,插入
"holy-grail ,ex_cmd_list
"map-which-key
"keycodes
"
"================================================================
"=====[搜索按n N时闪烁光标]=============
"这个map会导致 搜索时不打开folder
"nnoremap <silent> n   n:call HLNext(0.1)<cr>
"nnoremap <silent> N   N:call HLNext(0.1)<cr>
function! HLNext (blinktime)
	set invcursorline
	redraw
	exec 'sleep ' . float2nr(a:blinktime * 1000) . 'm'
	set invcursorline
	redraw
endfunction

## PROMPT SETTING START

# 256color

<<desc

echo -e "\033[38;5;208mpeach\033[0;00m"

This will output a pleasing sort of peach colored text.
Taking apart this command: \033[38;5;208m
The \033 is the escape code. The [38; directs command to the foreground. If you want to change the background color instead, use [48; instead. The 5; is just a piece of the sequence that changes color. And the most important part, 208m, selects the actual color.

desc

cc_off='\033[0m'       # Text Reset

parse_git_branch() 
{
	echo -n $(__git_ps1 " (%s)")
}

jobscount() 
{
	local stopped=$(jobs -sp | wc -l | tr -d " ")
	local running=$(jobs -rp | wc -l | tr -d " ")
	((running+stopped)) && echo -n "[${running}r/${stopped}s]"
}
gen_segment()
{
	local text=$1
	local text_c=$2
	local text_bg_c=$3
	local follow_bg=$4
	if [[ ! -n $text ]]; then
		exit 0
	fi

	local fg_pre="\033[38;5;"
	local bg_pre="\033[48;5;"
	local bg_c="${bg_pre}${text_bg_c}m"
	local t_c="${fg_pre}${text_c}m"
	local seg_c="${fg_pre}${text_bg_c}m"
	if [[ -n $4 ]]; then
		local bg_f="${cc_off}${bg_pre}${follow_bg}m"
	else
		local bg_f="${cc_off}"
	fi
	echo -n "${bg_c}${t_c}${text}${bg_f}${seg_c}⮀$cc_off"
}
gen_prompt()
{
	#special code: ┌─└─
	local _job_status=$(jobscount)
	local _git_status=$(parse_git_branch)
	local _date_status=$(date "+%F %A %T")
	local seg_job=$(gen_segment "${_job_status}" 124 249 236)
	local seg_user=$(gen_segment "\u@\h" 255 236 239)
	local seg_path=$(gen_segment "\w" 51 239 111)
	local seg_git=$(gen_segment "${_git_status}" 124 111 255)
	local seg_date=$(gen_segment " ${_date_status}" 16 255)
	local seg_secline=$(gen_segment "\# " 232 192)
	case "$TERM" in
		xterm-256color|screen-256color)
			local _second_line="\#>"
			#export PS1="\u@\h:\w\$\n\#>"
			export PS1="${seg_job}${seg_user}${seg_path}${seg_git}${seg_date}$cc_off\$\n${seg_secline}"
			;;
		linux)
			export PS1="\u@\h:\w\$\n\#>"
			;;
		*)
			#export PS1="\u@\h:\w\n\$\#>"
			;;
	esac
}

PROMPT_COMMAND=gen_prompt

## PROMPT SETTING END

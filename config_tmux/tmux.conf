
#########################################
############## KEY-BINDINGS ##################
#########################################
 
# key bindings
set-option -g prefix C-s
unbind C-b
bind C-s send-prefix
 
bind z confirm-befor -p "kill-session #S ? (y/n)" kill-session 

bind h select-pane -L \; refresh-client -S
bind l select-pane -R \; refresh-client -S
bind k select-pane -U \; refresh-client -S
bind j select-pane -D \; refresh-client -S
bind H select-pane -L \; resize-pane -Z
bind L select-pane -R \; resize-pane -Z
bind K select-pane -U \; resize-pane -Z
bind J select-pane -D \; resize-pane -Z
bind space resize-pane -Z

# 当发现pane中有vim运行的时候，会将c-h/j/k/l 发送给vim
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || ( tmux select-pane -L && ~/bin/changeInputSource 'com.apple.keylayout.US' ) "
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || ( tmux select-pane -D && changeInputSource 'com.apple.keylayout.US' )"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || ( tmux select-pane -U && changeInputSource 'com.apple.keylayout.US' )"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || ( tmux select-pane -R && changeInputSource 'com.apple.keylayout.US' )"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || ( tmux select-pane -l && changeInputSource 'com.apple.keylayout.US' ) "

#resize-pane
unbind M-Up 
unbind M-Down 
unbind M-Left 
unbind M-Right 
unbind C-Up 
unbind C-Down 
unbind C-Left 
unbind C-Right 
bind -n M-h resize-pane -L 5
bind -n M-j resize-pane -D 5
bind -n M-k resize-pane -U 5
bind -n M-l resize-pane -R 5

unbind %
bind | split-window -h
bind - split-window -v

#bind -r C-h select-window -t :-
#bind -r C-l select-window -t :+
bind -r n next-window
bind -r p previous-window

bind H select-layout even-horizontal
bind V select-layout even-vertical

# Setup 'v' to begin selection as in Vim
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

#source ~/.tmux.conf file
bind r source-file ~/.tmux.conf \; display 'reload ~/.tmux.conf'
unbind s
bind s choose-tree
#bind s choose-tree -u  -S "---'#{session_name}'"

#########################################
############## OPTIONS ##################
#########################################
set -g base-index 1
set -g display-time 500
set -g repeat-time 1000
set -sg escape-time 0
set -g history-limit 100000
set -g default-terminal "screen-256color"

#copy-mode 将快捷键设置为vi 模式
setw -g mode-keys vi
setw -g utf8 on
setw -g pane-base-index 1

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on
# mouse
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on
#vim clipboard
#need install -- sudo port install tmux-pasteboard
set-option -g default-command "reattach-to-user-namespace -l bash"

# set color for status bar
set-option -g status-bg colour234 #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr dim 

# THEME
set -g window-status-fg white
#set -g window-status-bg colour236 
set -g window-status-bg black 
set -g window-status-current-bg white
set -g window-status-current-fg brightblue
set -g window-status-current-attr bold
set -g window-status-separator ' ' 
set -g window-status-format "#I#[fg=colour232,bg=colour230]⮀#[fg=colour239]#W#F #[fg=colour230,bg=colour234]⮀"
#set -g window-status-format "#(~/dotfiles/config_tmux/test.sh)"
set -g window-status-current-format "#[fg=colour231,bg=colour234]#I#[fg=colour232,bg=colour51]⮀#W#F #[fg=colour51,bg=colour234]⮀"

set -g status on
set -g status-utf8 on
set -g status-keys vi
set -g status-interval 5 

set -g status-left-length 30
set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold]⮀'
set -g status-right "#[fg=colour253,bg=colour234]⮂#[fg=colour232,bg=colour253,bold]#(date '+%Y-%m-%d %H:%M')"
set -g status-right-length 30
set -g status-justify centre 
set -g status-bg black
set -g status-fg white
set -g pane-active-border-style "fg=brightblue,bold,dim,blink"
set -g pane-border-style "fg=brightmagenta,hidden"


